[
["r-y-rstudio.html", "Capítulo 3 R y Rstudio 3.1 R 3.2 Rstudio 3.3 Conceptos básicos en el uso de R 3.4 Tipos de datos 3.5 Estructura de datos 3.6 R como calculadora 3.7 Bibliografía", " Capítulo 3 R y Rstudio 3.1 R R es un lenguaje de programación y entorno computacional dedicado a la estadística. Es un lenguaje de programación porque nos permite dar instrucciones, usando código, a nuestros equipos de cómputo para que se realicen tareas específicas. Cuando instalamos R en nuestra computadora, estamos instalando un entorno computacional. R es diferente a otros lenguajes de programación que por lo general están diseñados para realizar muchas tareas diferentes, R fue creado con el único propósito de hacer estadística. Para instalar R lo podemos hacer desde el CRAN: https://cran.r-project.org/bin/windows/base/ También se encuentran las versiones disponibles para Linux y Mac. CRAN es el acrónimo para Cromprehensive R Archive Network y es un repositorio oficial de paquetes. 3.2 Rstudio Rstudio es una IDE para R. Una IDE es un entorno integrado de desarrollo. Una IDE nos proporcional herramientas para escribir y revisar nuestro código, administra los archivos que estamos usando, gestionar nuestro entorno de trabajo y algunas otras herramientas de productividad. Para instalar Rstudio, es necesario descargar y ejecutar alguno de los instaladores disponibles en el sitio oficial. 3.2.1 Partes de Rstudio Al abrir Rstudio se visualiza lo siguiente 3.2.1.1 Fuente Es en donde se escribe el código para documentarlo en scripts. En primer lugar se detallan las librerías con las que se trabajan. Para comentar el código usamos numeral # # Este es un comentario 3.2.1.2 Consola Es la parte más importante porque es donde nuestro código es interpretado. Podemos escribir directamente aquí nuestro código y será ejecutado. 3.2.1.3 Entorno, Historia, Conexiones y Git En esta parte se guardan las bases de datos, las funciones del entorno de trabajo. También desde allí podemos importar bases de datos. Para limpiar nuestro entorno de trabajo podemos hacerlo con el símbolo de la escobita. 3.2.1.4 Archivos, Gráficos, Paquetes, Ayuda, Visor En esta sección podemos ver los archivos la carpeta que funciona como entorno de trabajo. Se pueden visualizar los gráficos que hemos realizado. Se ofrece una lista de paquetes instalados y cargados en nuestro entorno de Rstudio. La ayuda nos permite ver la documentación de una determinada librería. Finalmente en la pestaña Viewer podemos visualizar documentos de texto o interactivos que realicemos. 3.3 Conceptos básicos en el uso de R En R, todo es un objeto. Todos los datos y estructuras de datos son objetos. Además, todos los objetos tienen un nombre para identificarlos. 3.3.1 Asignación En R usamos &lt;- para asignar un nombre a un objeto radio &lt;- 2 3.3.2 Entorno de trabajo Es en donde se guardarán nuestros archivos, scripts y gráficos getwd() ## [1] &quot;/home/roxana/guias-tp&quot; Si quisiéramos definir otro entorno de trabajo setwd() 3.3.3 Paquetes Un paquete es una colección de funciones diseñadas para atender una tarea específica. Para instalarlos desde el CRAN lo hacemos de la siguiente manera: install.packages(&quot;ggplot2&quot;) Una vez concluida la instalación podemos usar las funciones de ese paquete mediante library(&quot;ggplot2&quot;) Para conocer todos los paquetes que tenemos instalados installed.packages() 3.3.4 Scripts Los scripts son documentos de texto con la extensión .R Son útiles para guardar y poder compartir código. 3.4 Tipos de datos En R, todo son objetos Los objetos más simples se llaman atómicos: character(cadena de caracteres) numeric (números reales) integer(números enteros) complex (números complejos) logical (lógicos o booleanos, toman valores de TRUE o FALSE) 3.5 Estructura de datos 3.5.1 Vectores Los vectores son arreglos ordenados en los cuales se puede almacenar información de tipo numérico (variable cuantitativa), alfanumérico (variable cualitativa) o lógico (TRUE o FALSE). La función de R para crear un vector es c() y que significa concatenar; dentro de los paréntesis de esta función se ubica la información a almacenar. Una vez construído el vector se acostumbra a etiquetarlo con un nombre corto y representativo de la información que almacena, la asignación se hace por medio del operador &lt;- entre el nombre y el vector. Vector de enteros c(3,2,5) ## [1] 3 2 5 numeros&lt;-c(3,2,5) numeros ## [1] 3 2 5 Vector de decimales c(3.2,2.4,5.8) ## [1] 3.2 2.4 5.8 Vector de caracteres c(&quot;Ana&quot;,&quot;Sofía&quot;,&quot;Pedro&quot;,&quot;Juan&quot;) ## [1] &quot;Ana&quot; &quot;Sofía&quot; &quot;Pedro&quot; &quot;Juan&quot; Vector de booleanos c(TRUE, FALSE, TRUE, FALSE) ## [1] TRUE FALSE TRUE FALSE 3.5.2 Matrices Las matrices son arreglos rectangulares de filas y columnas con información numérica, alfanumérica o lógica. Para construir una matriz se usa la función matrix( ). Por ejemplo, para crear una matriz de 4 filas y 5 columnas (de dimensión 4×5) con los primeros 20 números positivos se escribe el código siguiente en la consola. mimatriz &lt;- matrix(data=1:20, nrow=4, ncol=5) mimatriz ## [,1] [,2] [,3] [,4] [,5] ## [1,] 1 5 9 13 17 ## [2,] 2 6 10 14 18 ## [3,] 3 7 11 15 19 ## [4,] 4 8 12 16 20 3.5.3 Dataframes o Marco de datos Data.frame es uno de los objetos más utilizados en R, porque permite agrupar vectores con información de diferente tipo (numérica, alfanumérica o lógica) en un mismo objeto, la única restricción es que los vectores deben tener la misma longitud. Para crear un marco de datos se usa la función data.frame() Paso 1: creamos los vectores #Creamos en primer lugar tres vectores alumnos&lt;-c(&quot;Ana&quot;,&quot;Sofía&quot;,&quot;Luis&quot;, &quot;Pedro&quot;,&quot;Juan&quot;) edad&lt;-c(15, 19, 13, 18, 20) deporte&lt;-c(TRUE, TRUE, FALSE, FALSE, TRUE) comic.fav&lt;-c(&#39;Superman&#39;, &#39;Superman&#39;, &#39;Batman&#39;, &#39;Spiderman&#39;, &#39;Batman&#39;) Paso 2: creamos un data.frame a partir de los vectores #Usamos la función data.frame mimarco &lt;- data.frame(alumnos, edad, deporte, comic.fav) mimarco ## alumnos edad deporte comic.fav ## 1 Ana 15 TRUE Superman ## 2 Sofía 19 TRUE Superman ## 3 Luis 13 FALSE Batman ## 4 Pedro 18 FALSE Spiderman ## 5 Juan 20 TRUE Batman 3.6 R como calculadora 3.6.1 Suma 2 + 2 #apretamos enter después ## [1] 4 3.6.2 Multiplicación 2*5 ## [1] 10 3.6.3 División real de dos números 5/2 ## [1] 2.5 3.6.4 División entera Devuelve como resultado la parte entera 5%/%2 ## [1] 2 3.6.5 Potenciación 5^2 ## [1] 25 3.6.6 Potenciación de exponente real 5^2.3 ## [1] 40.51641 3.6.7 Raíz cuadrada de 2 sqrt(2) ## [1] 1.414214 3.6.8 Logarimto neperiano de 4 log(4) ## [1] 1.386294 3.6.9 Logaritmo de 4 en base 10 log(4,10) ## [1] 0.60206 3.6.10 El número e exp(1) ## [1] 2.718282 3.7 Bibliografía R para principiantes Juan Bosco Mendoza Vega Disponible en http://bit.ly/2Zg0I3M El arte de programar en R Julio Sergio Santana &amp; Efraín Mateos Farfán Disponible en http://bit.ly/2N2Y1Y8 R como calculadora http://ocw.uc3m.es/estadistica/aprendizaje-del-software-estadistico-r-un-entorno-para-simulacion-y-computacion-estadistica/r-como-calculadora Foundations of Statistics with R (2020) Darrin Speegle and Bryan Clair https://mathstat.slu.edu/~speegle/_book/preface.html "]
]
